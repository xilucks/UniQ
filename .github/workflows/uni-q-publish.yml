name: uni-q ci-cd

on:
  push:
    branches:
      - main
    paths:
      - 'packages/**'
      - '.github/workflows/uni-q-publish.yml'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: npm install

      - name: Cache Turbo
        uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
        
      - name: Build
        run: npx turbo run build --filter=[HEAD^1]
        
      - name: Publish Changed Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # 변경된 패키지 찾기
          CHANGED_PACKAGES=$(npx turbo run build --filter=[HEAD^1] --dry-run | grep "packages/" | cut -d'/' -f1-3 | sort -u)
          
          for package in $CHANGED_PACKAGES; do
            if [ -f "$package/package.json" ]; then
              cd $package
              PACKAGE_NAME=$(node -p "require('./package.json').name")
              PACKAGE_VERSION=$(node -p "require('./package.json').version")
              
              if [ $(npm view $PACKAGE_NAME version 2>/dev/null || echo "0.0.0") != $PACKAGE_VERSION ]; then
                echo "Publishing $PACKAGE_NAME@$PACKAGE_VERSION"
                npm publish --access public
              else
                echo "Version $PACKAGE_VERSION of $PACKAGE_NAME already published"
              fi
              
              cd - > /dev/null
            fi
          done
